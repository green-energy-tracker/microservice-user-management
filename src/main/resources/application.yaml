spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    show-sql: ${SPRING_JPA_SHOW_SQL}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
        default_schema: ${SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    properties:
      schema:
        registry:
          cache-capacity: ${SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_CACHE_CAPACITY}
          url: ${SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL}
    topic:
      user-events: ${SPRING_KAFKA_TOPIC_USER_EVENTS}
      user-events-dlt: ${SPRING_KAFKA_TOPIC_USER_EVENTS_DLT}
      auth-server-events: ${SPRING_KAFKA_TOPIC_AUTH_SERVER_EVENTS}
    producer:
      key-serializer: ${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER}
      value-serializer: ${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER}
      properties:
        schema.registry.url: ${SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL}
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID}
      key-deserializer: ${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER}
      value-deserializer: ${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER}
  management:
    endpoints:
      web:
        exposure:
          include: ${SPRING_MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
server:
  port: ${SPRING_SERVER_PORT}